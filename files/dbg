(fun (dbg/out str)
  (var ptr str)
  (while (u8 ptr)
    (set ptr (+ ptr 1)))
  (sys/call 1 2 str (- ptr str)))

(fun (dbg/int l n)
  (dbg/out l)
  (dbg/out ": ")
  (if ((< n 0)
       (dbg/out "-")
       (set n (- n))))
  (mem buf 40)
  (var end (+ buf 40))
  (var ptr end)
  (set ptr (- ptr 1))
  (set (u8 ptr) 0)
  (while (begin
           (set ptr (- ptr 1))
           (set (u8 ptr) (+ (% n 10) 48))
           (set n (/ n 10))
           n))
  (dbg/out ptr)
  (dbg/out "\n"))

(fun (dbg/str l s)
  (dbg/out l)
  (dbg/out ": ")
  (dbg/out s)
  (dbg/out "\n"))

(fun (dbg/assert cond msg)
  (if ((not cond)
       (dbg/out msg)
       (dbg/out "\n")
       (sys/call 60 1))))

(fun (dbg/assert-equal actual expected thing)
  (if ((!= actual expected)
       (dbg/out "wrong ")
       (dbg/out thing)
       (dbg/out "\n")
       (dbg/int "   actual" actual)
       (dbg/int " expected" expected)
       (sys/call 60 1))))

(fun (dbg/assert-less-or-equal value max thing)
  (if ((> value max)
       (dbg/out thing)
       (dbg/out " too large\n")
       (dbg/int "   value" value)
       (dbg/int " maximum" max)
       (sys/call 60 1))))
