;; Mandelbrot

(defconst mandel/NORM 1000000)
(defconst mandel/MAX    255)

(defconst mandel/re-min -2500000)
(defconst mandel/re-max  1000000)
(defconst mandel/im-min -1000000)
(defconst mandel/im-max  1000000)

(defconst mandel/x-size 800)
(defconst mandel/y-size 400)

(struct mandel/data
  cur-re-min cur-re-max
  cur-im-min cur-im-max)

(fun (mandel/iter re im)
  (var i 0)
  (var re_i re)
  (var im_i im)
  (while (< i mandel/MAX)
    (var re_i_2 (/ (* re_i re_i) mandel/NORM))
    (var im_i_2 (/ (* im_i im_i) mandel/NORM))
    (if ((> (+ re_i_2 im_i_2) (* 4 mandel/NORM))
         (goto out)))
    (set im_i (+ (* 2 (/ (* re_i im_i) mandel/NORM)) im))
    (set re_i (+ re_i_2 (- im_i_2) re))
    (set i (+ i 1)))
  (label out)
  i)

(fun (mandel/render inst)
  (var re-min (mandel/cur-re-min inst))
  (var re-max (mandel/cur-re-max inst))
  (var im-min (mandel/cur-im-min inst))
  (var im-max (mandel/cur-im-max inst))
  (var y 0)
  (while (< y mandel/y-size)
    (if ((== (% y 10) 0)
         (gfx/show)))
    (var x 0)
    (while (< x mandel/x-size)
      (var re (+ re-min (* x (/ (- re-max re-min) mandel/x-size))))
      (var im (+ im-min (* y (/ (- im-max im-min) mandel/y-size))))
      (var c (- 255 (mandel/iter re im)))
      (gfx/put-pixel x y (gfx/color (* c 15) (* c 1) (* c 32)))
      (set x (+ x 1)))
    (set y (+ y 1)))
  (gfx/show))

(fun (mandel/efun-resize inst x y w h))

(fun (mandel/efun-input inst state input event-x event-y)
  (if ((== input -11)
       (gfx/loop-quit))
      ((== input -9)
       (var dx1 (- (mandel/cur-re-max inst) (mandel/cur-re-min inst)))
       (var dy1 (- (mandel/cur-im-max inst) (mandel/cur-im-min inst)))
       (set (mandel/cur-re-min inst) (- (mandel/cur-re-min inst) dx1))
       (set (mandel/cur-re-max inst) (+ (mandel/cur-re-max inst) dx1))
       (set (mandel/cur-im-min inst) (- (mandel/cur-im-min inst) dy1))
       (set (mandel/cur-im-max inst) (+ (mandel/cur-im-max inst) dy1))
       (mandel/render inst))
      ((== input -1)
       (var re-len (- (mandel/cur-re-max inst) (mandel/cur-re-min inst)))
       (var im-len (- (mandel/cur-im-max inst) (mandel/cur-im-min inst)))
       (var x (+ (mandel/cur-re-min inst) (/ (* event-x re-len) mandel/x-size)))
       (var y (+ (mandel/cur-im-min inst) (/ (* event-y im-len) mandel/y-size)))
       (var dx2 (/ re-len 4))
       (var dy2 (/ im-len 4))
       (set (mandel/cur-re-min inst) (- x dx2))
       (set (mandel/cur-re-max inst) (+ x dx2))
       (set (mandel/cur-im-min inst) (- y dy2))
       (set (mandel/cur-im-max inst) (+ y dy2))
       (mandel/render inst))))

(data mandel/efuns
  (4 mandel/efun-resize
     mandel/efun-input))

(fun (mandel/main)
  (mem inst mandel/data)
  (set (mandel/cur-re-min inst) mandel/re-min)
  (set (mandel/cur-re-max inst) mandel/re-max)
  (set (mandel/cur-im-min inst) mandel/im-min)
  (set (mandel/cur-im-max inst) mandel/im-max)
  (mandel/render inst)
  (gfx/loop inst mandel/efuns))
